# toy_en_de.yaml

## Where the samples will be written
save_data: ./toy-enzh/run/example
## Where the vocab(s) will be written
src_vocab: ./toy-enzh/en.vocab
tgt_vocab: ./toy-enzh/zh.vocab
# Prevent overwriting existing files in the folder
overwrite: True

# Corpus opts:
data:
    corpus_1:
        path_src: ./toy-enzh/en.train.tok
        path_tgt: ./toy-enzh/zh.train.tok
    valid:
        path_src: ./toy-enzh/en.dev.tok
        path_tgt: ./toy-enzh/zh.dev.tok

# Train on a single GPU
world_size: 1
gpu_ranks: [0]

vocab_size_multiple: 16

# Where to save the checkpoints
save_model: ./toy-enzh/run/model
save_checkpoint_steps: 500
keep_checkpoint: 2

train_steps: 8000
valid_steps: 500
report_every: 100

seed: 3435

word_vec_size: 128
hidden_size: 128
layers: 2
transformer_ff: 256
heads: 8

accum_count: 4
optim: adam
model_type: fp16
adam_beta1: 0.9
adam_beta2: 0.998
decay_method: noam
learning_rate: 2.0
max_grad_norm: 0.0
warmup_steps: 4000

early_stopping: 2
early_stopping_criteria: ppl

valid_metrics: [BLEU]

scoring_debug: true
dump_preds: ./toy-enzh/run/pred

tensorboard: true
tensorboard_log_dir: ./toy-enzh/run/logs

bucket_size: 262144
batch_size: 2048
valid_batch_size: 2048
batch_type: tokens
normalization: tokens
dropout: 0.1
label_smoothing: 0.1

max_generator_batches: 2

param_init: 0.0
param_init_glorot: 'true'
position_encoding: 'true'